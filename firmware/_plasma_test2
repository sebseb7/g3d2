#!/usr/bin/perl

use Device::SerialPort;
use Time::HiRes qw(usleep time sleep);

use strict;

my $hostname = `hostname`;
chomp $hostname;

my $port = "/dev/cu.usbserial-A100DDXG";
if($hostname eq 'lennyvm')
{
    $port = '/dev/ttyUSB0';
}
    
    
my $port = Device::SerialPort->new($port);
$port->databits(8);
$port->baudrate(500000);
#$port->baudrate(1152000);
#$port->baudrate(1152000);
$port->handshake("xoff");
$port->parity("none");
$port->stopbits(1);
 
my $z = 0;
my $z1 = 0;

my @pixbuf;
foreach my $i (0..2303)
{
    $pixbuf[$i]=0;
}

my $sleeptime = 23500;

my $z2=0;
my $z3=0;
my $z4=0;

my $frame=0;
while(1)
{
	$z+= ((1-sin($z1))/60);
	$z1+=.1;
	$z2+=.13;
	$z3++;
	$z4++;
	$port->write(chr(103));
	my $time1 = time;
 

	my $pixel = 0;
	my $mod = 0;


	
	foreach my $x (0..31)
	{
		my $xpos = ((($x-$x%8)/8) * 576)+($x%8);
		
		my $xfac = sin($z1)*2*sin($x/8);
		
		foreach my $y (0..71)
		{
			my $num = $xfac + 2*sin($y/8)*sin($z2);
			
			
		
			$num = int $num*16+16;

		
			if($num > 15)
			{
				$num = 31-$num;
			}

			$num=1 if $num<1;
			


			$pixbuf[($y*8+$xpos)]=$num;
			
		}
	}


	my $pixel = 0;
	foreach my $mod (1..36)
	{
		my $str;
		foreach my $pix (1..32)
		{
			$str.=chr($pixbuf[$pixel]+$pixbuf[$pixel+1]*16);
			$pixel++;
			$pixel++;
		}
		$port->write(esc($str));
	}

	usleep($sleeptime);
	
	
	
	my $fps = 1 / (time - $time1);

	$frame++;
	if($frame == 40)
	{
		warn "$fps $sleeptime";
		$frame=0;
	}
	
	$sleeptime+=100 if$fps > 40;
	$sleeptime-=100 if$fps < 40;
}

$port->close();



sub esc($)
{
    my $data = shift;
    
    
    $data =~ s/\x65/\x65\x3/go;
	$data =~ s/\x67/\x65\x1/go;
	$data =~ s/\x68/\x65\x2/go;
	$data =~ s/\x66/\x65\x4/go;
                                                            
	return $data;
}

