#!/usr/bin/perl

use Device::SerialPort;
use Time::HiRes qw(usleep time sleep);

use strict;

my $hostname = `hostname`;
chomp $hostname;

my $port = "/dev/cu.usbserial-A2002QDi";
if($hostname eq 'lennyvm')
{
    $port = '/dev/ttyUSB0';
}
    
    
my $port = Device::SerialPort->new($port);
$port->databits(8);
$port->baudrate(500000);
$port->parity("none");
$port->stopbits(1);
 
my $z = 0;

my @pixbuf;
foreach my $i (0..2303)
{
    $pixbuf[$i]=chr(0);
}

#    $pixbuf[632]=chr(15);


while(1)
{
	$z+=0.004;
	$port->write(chr(35));
	my $time1 = time;
 

	my $pixel = 0;
	my $mod = 0;


	
	foreach my $y (0..71)
	{
		foreach my $x (0..31)
		{
			my $num = abs sin($x*3+4*cos($z))*40*sin($z*2);
			$num += abs sin($y*3-3*cos($z/2))*30 + cos($y*3-sin($z*3))*25;
		
			$num = int($num)%32;
		
			if($num > 15)
			{
				$num = 32-$num;
			}

			$num=1 if $num==0;


			$pixbuf[($y*8+($x%8)+((($x-$x%8)/8) * 576))]=chr($num);
			$pixel++;
		}
	}



	my $pixel = 0;
	foreach my $mod (0..35)
	{
		my $str;
		foreach my $pix (0..63)
		{
			$str.=$pixbuf[$pixel];
			$pixel++;
		}
		$port->write(esc($str));
		usleep(900);
	}

		


	warn 1 / (time - $time1);
}

$port->close();

sub esc($)
{
    my $data = shift;
    
	$data =~ s/e/\x65\x3/go;
	$data =~ s/\x23/\x65\x1/go;
	$data =~ s/B/\x65\x2/go;
	$data =~ s/f/\x65\x4/go;
                    
	return $data;
}
                        