#!/usr/bin/perl

use Device::SerialPort;
use Time::HiRes qw(usleep time sleep);

use strict;

my $hostname = `hostname`;
chomp $hostname;

my $port = "/dev/cu.usbserial-A2002QDi";
if($hostname eq 'ernie')
{
    $port = '/dev/ttyUSB1';
}
    
    
my $port = Device::SerialPort->new($port);
$port->databits(8);
$port->baudrate(500000);
#$port->baudrate(1152000);
#$port->baudrate(1152000);
$port->handshake("xoff");
$port->parity("none");
$port->stopbits(1);
 
my $z = 0;
my $z1 = 0;

my @pixbuf;
foreach my $i (0..2303)
{
    $pixbuf[$i]=0;
}




my %frame_cache;
foreach my $fr (0..1000)
{
	$z+= ((1-sin($z1))/30);
	$z1+=0.005;
 

	my $pixel = 0;
	my $mod = 0;


	
	foreach my $y (0..71)
	{
		foreach my $x (0..31)
		{
			my $num = sin($x*3.1+10*sin($z))*20*cos($z*1.1);
			$num += abs sin($y*3.1-20*cos($z1))*20 + cos($y*3-sin($z*3))*15 ;
		
			$num = int($num)%32;
		
			if($num > 15)
			{
				$num = 31-$num;
			}

			$num=1 if $num<1;

			$pixel++;

			$pixbuf[($y*8+($x%8)+((($x-$x%8)/8) * 576))]=$num;
			
		}
	}


	my $pixel = 0;
	foreach my $mod (1..36)
	{
		my $str;
		foreach my $pix (1..32)
		{
			$str.=chr($pixbuf[$pixel]+$pixbuf[$pixel]*16);
			$pixel++;
			$pixel++;
		}
		$frame_cache{$fr}.= esc($str);

		
	}
	$port->write(chr(103));
	usleep(24000);
	$port->write($frame_cache{$fr});

	warn $fr;


}
while(1)
{
foreach my $fr (0..1000)
{
	my $time1 = time;

	$port->write(chr(103).$frame_cache{$fr});

	usleep(24000);

	warn 1 / (time - $time1);

}
}
$port->close();



sub esc($)
{
    my $data = shift;
    
    
    $data =~ s/\x65/\x65\x3/go;
	$data =~ s/\x67/\x65\x1/go;
	$data =~ s/\x68/\x65\x2/go;
	$data =~ s/\x66/\x65\x4/go;
                                                            
	return $data;
}

